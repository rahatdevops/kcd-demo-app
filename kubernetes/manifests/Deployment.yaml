apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kcd-demo-app
  name: kcd-demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcd-demo-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubernetes.io/egress-bandwidth: 10M
        kubernetes.io/ingress-bandwidth: 25M
        prometheus.io/path: /prometheus
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: kcd-demo-app
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kcd-demo-app
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - envFrom:
            - configMapRef:
                name: envar-config-kcd-demo-app
          image: shaekhhasan/kcd-demo-app:v0.1.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 100
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
          readinessProbe:
            failureThreshold: 100
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 33m
              memory: 256Mi
